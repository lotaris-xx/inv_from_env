# Create an inventory, source and template
# Then launch the template and collect output
# Doing this all through the API as that is how customer is going to do it.
# Otherwise would use the awx.awx collection to constuct this stuff
#
# Call something like: ansible-playbook -i localhost, test.yml -e "host_list=server1,server2"

- hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yml
  vars:
    ansible_connection: local
  tasks:
    - name: Create an inventory
      uri:
        url: "{{ tower_url_inventory }}"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: POST
        body_format: json
        body:
          name: Inv_from_env
          description: Inventory from Environment Var
          organization: "{{ tower_org }}"
        status_code:
          - 201
        validate_certs: false
      register: tower_inventory_out

    - name: Attach a source
      uri:
        url: "{{ tower_url_inventory_source }}"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: POST
        body_format: json
        body:
          name: Inv_from_env
          description: Inventory from Environment Var
          organization: "{{ tower_org}}"
          source: scm
          source_path: host_list_from_env.yml
          source_vars: "---\nHOST_LIST_VAR: {{ host_list }}"
          overwrite: true
          verbosity: 1
          inventory: "{{ tower_inventory_out.json.id }}"
          update_on_launch: true
          source_project: "{{ tower_project_id }}"
        status_code:
          - 201
        validate_certs: false
      register: tower_inventory_source_out

    - name: Create a job template
      uri:
        url: "{{ tower_url_job_template }}"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: POST
        body_format: json
        body:
          name: Inv_from_env_test
          description: Test template for the Inventory from Env Code
          job_type: run
          inventory: "{{ tower_inventory_out.json.id }}"
          organization: "{{ tower_org}}"
          project: "{{ tower_project_id }}"
          playbook: ping.yml
        status_code:
          - 201
        validate_certs: false
      register: tower_job_template_out

    - name: Attach credential to job template
      uri:
        url: "{{ tower_url_job_template_credentials }}"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: POST
        body_format: json
        body: '{ "id": {{ tower_test_credential_id |int }} }'
        status_code:
          - 204
        validate_certs: false

    - name: Launch the job template
      uri:
        url: "{{ tower_url_job_template_launch }}"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: POST
        status_code:
          - 201
        validate_certs: false
      register: tower_job_template_launch_out

    - name: Wait until job is finished
      uri:
        url: "{{ tower_url_job }}{{ tower_job_template_launch_out.json.id }}/"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
      register: tower_job_status_out
      until: tower_job_status_out.json.finished
      retries: 10

    - name: Grab stdout
      uri:
        url: "{{ tower_url_job }}{{ tower_job_template_launch_out.json.id }}/stdout/?format=txt"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        return_content: true
      register: tower_job_stdout

    - name: Print stdout
      debug:
        msg: "{{ tower_job_stdout.content.split('\n') }}"

    - name: Remove job template
      uri:
        url: "{{ tower_url_job_template }}{{ tower_job_template_out.json.id }}/"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: DELETE
        status_code:
          - 204
        validate_certs: false

    - name: Remove inventory
      uri:
        url: "{{ tower_url_inventory }}{{ tower_inventory_out.json.id }}/"
        user: "{{ tower_user }}"
        password: "{{ tower_passwd }}"
        force_basic_auth: true
        method: DELETE
        status_code:
          - 202
        validate_certs: false
